---
import Container from '../../components/Container.astro';
import Header from '../../components/Header.astro';
import Layout from '../../layouts/Layout.astro';
import { fetchEvents } from '../../api/api.ts';

interface Event {
    id: string;
    name: string;
    cover?: { source: string };
    place?: { name: string };
    start_time: string;
    link?: string;
}

const events: { upcomingEvents: Event[], pastEvents: Event[] } = await fetchEvents()
        .then(async response => {
                if (!response.ok) {
                        console.error('Error fetching events:', await response.text());
                        return { upcomingEvents: [], pastEvents: [] };
                }
                return response.json() as Promise<{ upcomingEvents: Event[], pastEvents: Event[] }>;
        })
        .catch(error => {
                console.error('Error fetching events:', error);
                return { upcomingEvents: [], pastEvents: [] };
        });
---


<Layout>
    <Header>
        <h1>Our Events</h1>
        <p>Discover the latest and past events we have hosted. Stay updated and join us for upcoming experiences!</p>
    </Header>

    <div class="bg-white py-24 sm:py-5">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
            <h1 class="text-center text-lg/8 z-10 font-semibold text-gray-900">Upcoming Events</h1>
            <div class="mx-auto mt-6 grid max-w-lg grid-cols-4 items-center gap-x-8 gap-y-10 sm:max-w-xl sm:grid-cols-6 sm:gap-x-10 lg:mx-0 lg:max-w-none lg:grid-cols-3">
                {events.upcomingEvents.map(event => (
                    <a href={event.link} target="_blank" rel="noopener noreferrer" class="card">
                        <img src={event.cover?.source || '/default.jpg'} alt={event.name} />
                        <h3 class="text-xl font-semibold text-gray-800">{event.name}</h3>
                        <p class="text-gray-600">{event.place?.name || 'Location not specified'}</p>
                        <p class="text-gray-500">{new Date(event.start_time).toLocaleString()}</p>
                    </a>
                ))}
            </div>

            <h1 class="text-center text-lg/8 z-10 font-semibold text-gray-900 mt-16">Past Events</h1>
            <div class="mx-auto mt-6 grid max-w-lg grid-cols-4 items-center gap-x-8 gap-y-10 sm:max-w-xl sm:grid-cols-6 sm:gap-x-10 lg:mx-0 lg:max-w-none lg:grid-cols-3">
                {events.pastEvents.map(event => (
                    <a href={event.link} target="_blank" rel="noopener noreferrer" class="card">
                        <img src={event.cover?.source || '/default.jpg'} alt={event.name} />
                        <h3 class="text-xl font-semibold text-gray-800">{event.name}</h3>
                        <p class="text-gray-600">{event.place?.name || 'Location not specified'}</p>
                        <p class="text-gray-500">{new Date(event.start_time).toLocaleString()}</p>
                    </a>
                ))}
            </div>
        </div>
    </div>
</Layout>

<style>
    .card {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
    }
    .card img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 5px;
    }
</style>